def age_dict(years_dict: dict):
    out_dict = {"–õ—é–±–æ–π": -1}
    for element in list(years_dict.values()):
        out_dict["üßç‚Äç‚ôÇ –ë–µ–∑ —Å–æ–ø—Ä–æ–≤–æ–∂–¥–µ–Ω–∏—è - " + str(element)] = "a-" + str(element)
        out_dict["üë®‚Äçüë©‚Äçüë¶ –° —Å–æ–ø—Ä–æ–≤–æ–∂–¥–µ–Ω–∏–µ–º - " + str(element)] = "s-" + str(element)
    return out_dict


def get_real_age_callback_value(years_dict: dict):
    output_dict = dict()
    for element in list(years_dict.values()):
        output_dict["a-" + str(element)] = "alone-" + str(element)
        output_dict["s-" + str(element)] = "supervised-" + str(element)
    return output_dict


quest_sort = {"–ü–æ —É–º–æ–ª—á–∞–Ω–∏—é": "default", "–ü–æ –ø–æ–ø—É–ª—è—Ä–Ω–æ—Å—Ç–∏": "popularity", "–ü–æ –Ω–∞—Ä–æ–¥–Ω–æ–º—É —Ä–µ–π—Ç–∏–Ω–≥—É": "rating",
              "–ü–æ –æ—Ç–∑—ã–≤–∞–º": "reviews"}

quest_types = {"–ö–≤–µ—Å—Ç –≤ —Ä–µ–∞–ª—å–Ω–æ—Å—Ç–∏": 1, "–ü–µ—Ä—Ñ–æ—Ä–º–∞–Ω—Å": 2, "–≠–∫—à–Ω-–∏–≥—Ä–∞": 6, "VR-–∫–≤–µ—Å—Ç": 7}

players = {"–õ—é–±–æ–µ": -1, "1": 1, "2": 2, "3": 3, "4": 4, "5": 5, "6": 6, "7": 7, "8": 8, "9": 9, "10+": 10, "15+": 15}

rating = {"–õ—é–±–æ–π": -1, "6+": 6, "6.5+": 6.5, "7+": 7, "7.5+": 7.5, "8+": 8, "8.5+": 8.5, "9+": 9, "9.5+": 9.5}

parents = {"–ë–µ–∑ —Å–æ–ø—Ä–æ–≤–æ–∂–¥–µ–Ω–∏—è": "alone", "–° —Ä–æ–¥–∏—Ç–µ–ª—è–º–∏": "supervised"}

age = {"6+": 6, "8+": 8, "10+": 10, "12+": 12, "14+": 14, "16+": 16, "18+": 18}

scary_level = {"–õ—é–±–∞—è": -1, "–ù–µ —Å—Ç—Ä–∞—à–Ω—ã–π": 0, "–ù–µ–º–Ω–æ–≥–æ —Å—Ç—Ä–∞—à–Ω—ã–π": 1, "–°—Ç—Ä–∞—à–Ω—ã–π": 2, "–û—á–µ–Ω—å —Å—Ç—Ä–∞—à–Ω—ã–π": 3}

quest_difficult_filter = {"–õ—é–±–∞—è": -1, "–ü—Ä–æ—Å—Ç–æ–π": "easy", "–°—Ä–µ–¥–Ω–∏–π": "moderate", "–°–ª–æ–∂–Ω—ã–π": "hard"}
quest_difficult_demonstrate = ["–ü—Ä–æ—Å—Ç–æ–π", "–°—Ä–µ–¥–Ω–∏–π", "–°–ª–æ–∂–Ω—ã–π", "–û—á–µ–Ω—å —Å–ª–æ–∂–Ω—ã–π"]

"""category_filter_dict = {"–°–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å": quest_sort, "–¢–∏–ø –∏–≥—Ä—ã": quest_types, "–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —á–µ–ª–æ–≤–µ–∫": players,
                        "–ù–∞—Ä–æ–¥–Ω—ã–π —Ä–µ–π—Ç–∏–Ω–≥": rating, "–í–æ–∑—Ä–∞—Å—Ç –∏–≥—Ä–æ–∫–æ–≤": age_dict(age), "–°—Ç—Ä–∞—à–Ω–æ—Å—Ç—å": scary_level,
                        "–°–ª–æ–∂–Ω–æ—Å—Ç—å": quest_difficult_filter, "–ñ–∞–Ω—Ä": None}

one_page_category_dict = {"–°–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å": "sort", "–¢–∏–ø –∏–≥—Ä—ã": "quest_types", "–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —á–µ–ª–æ–≤–µ–∫": "players",
                          "–ù–∞—Ä–æ–¥–Ω—ã–π —Ä–µ–π—Ç–∏–Ω–≥": "rating", "–í–æ–∑—Ä–∞—Å—Ç –∏–≥—Ä–æ–∫–æ–≤": "min_age",
                          "–°—Ç—Ä–∞—à–Ω–æ—Å—Ç—å": "scary_level", "–°–ª–æ–∂–Ω–æ—Å—Ç—å": "level"}

more_pages_category_dict = {"–ñ–∞–Ω—Ä": "category_sub"}
"""

add_big_quest_params = {"details": "–î–µ—Ç–∞–ª–∏", "description": "–û–ø–∏—Å–∞–Ω–∏–µ"}

offer_callback_params = {"quest": "open_quest", "offer": "open_offer"}

QUEST_TELEGRAM_PAGE_COUNT = 6
SEARCH_LIST_QUEST_COUNT = 12
SUBCATEGORIES_TELEGRAM_PAGE_COUNT = 8
MAX_MESSAGE_LENGTH = 4096


class FilterParameter(object):
    def __init__(self, user_text, param_text, subcategory_param, link_param, default_param, parameter_type,
                 help_link_param):
        self.user_text = user_text
        self.param_text = param_text
        self.subcategory_param = subcategory_param
        self.link_param = link_param
        self.default_param = default_param
        self.parameter_type = parameter_type
        self.help_link_param = help_link_param


all_array = [
    FilterParameter("üìä –°–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å", "sort", quest_sort, "sort=", 'default', "one_page", None),
    FilterParameter("üîç –¢–∏–ø –∏–≥—Ä—ã", "quest_types", quest_types, "quest_types[]=", [], "one_page", None),
    FilterParameter("üßç‚Äç –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —á–µ–ª–æ–≤–µ–∫", "players", players, "players=", -1, "one_page", None),
    FilterParameter("ü•á –ù–∞—Ä–æ–¥–Ω—ã–π —Ä–µ–π—Ç–∏–Ω–≥", "rating", rating, "rating=", -1, "one_page", None),
    FilterParameter("üîû –í–æ–∑—Ä–∞—Å—Ç –∏–≥—Ä–æ–∫–æ–≤", "min_age", age_dict(age), "min_age=", -1, "one_page",
                    get_real_age_callback_value(age)),
    FilterParameter("üíÄ –°—Ç—Ä–∞—à–Ω–æ—Å—Ç—å", "scary_level", scary_level, "scary_level=", -1, "one_page", None),
    FilterParameter("üîí –°–ª–æ–∂–Ω–æ—Å—Ç—å", "level", quest_difficult_filter, "level=", -1, "one_page", None),
    FilterParameter("üóÇ –ñ–∞–Ω—Ä", "category_sub", None, "category[]=", [], "more_pages", None),
]

array_params_link_params = [i.link_param for i in all_array]
filter_type = [i.param_text for i in all_array]
default_params_array = [i.default_param for i in all_array]
default_params_quest_filter = dict(zip(filter_type, default_params_array))
link_param_dict = dict(zip(filter_type, array_params_link_params))
user_text_list = [i.user_text for i in all_array]
subcategory_param_list = [i.subcategory_param for i in all_array]
category_filter_dict = dict(zip(user_text_list, subcategory_param_list))
param_text_by_user_text_dict = dict(zip(user_text_list, filter_type))
one_page_user_list = [i.user_text for i in all_array if i.parameter_type == "one_page"]
one_page_param_list = [i.param_text for i in all_array if i.parameter_type == "one_page"]
more_pages_user_list = [i.user_text for i in all_array if i.parameter_type == "more_pages"]
more_pages_param_list = [i.param_text for i in all_array if i.parameter_type == "more_pages"]
one_page_category_dict = dict(zip(one_page_user_list, one_page_param_list))
more_pages_category_dict = dict(zip(more_pages_user_list, more_pages_param_list))
all_category_dict_value = {**one_page_category_dict, **more_pages_category_dict}
with_help_link_param_name_list = [i.param_text for i in all_array if i.help_link_param is not None]
with_help_link_param_params_list = [i.help_link_param for i in all_array if i.help_link_param is not None]
help_link_param_dict = dict(zip(with_help_link_param_name_list, with_help_link_param_params_list))
type_filter_list = list(category_filter_dict.keys())
